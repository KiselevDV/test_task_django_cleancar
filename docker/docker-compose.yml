services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: web_cleancar
    command: >
      sh -c "poetry run python manage.py migrate &&
             poetry run gunicorn config.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    restart: always
    volumes:
      - ../.env:/app/.env
    ports:
      - "18000:8000"
    depends_on:
      db_postgresql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - test_network_cleancar

  db_postgresql:
    image: postgres:17-alpine
    container_name: postgres_db_cleancar
    restart: always
    environment:
      POSTGRES_USER: test_user_cleancar
      POSTGRES_PASSWORD: test_password_cleancar
      POSTGRES_DB: test_database_cleancar
    ports:
      - "15432:5432"
    volumes:
      - ../../DB/postgres/pg_data_cleancar:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "test_user_cleancar", "-d", "test_database_cleancar"]
      interval: 10s
      retries: 5
    networks:
      - test_network_cleancar

  redis:
    image: redis:7-alpine
    container_name: redis_cleancar
    restart: always
    ports:
      - "16379:6379"
    networks:
      - test_network_cleancar

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_worker_cleancar
    command: poetry run celery -A config worker --loglevel=info
    depends_on:
      - redis
    networks:
      - test_network_cleancar

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_beat_cleancar
    command: poetry run celery -A config beat --loglevel=info
    depends_on:
      - db_postgresql
      - celery
    networks:
      - test_network_cleancar

volumes:
  pg_data_cleancar:

networks:
  test_network_cleancar:
    driver: bridge